<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_solid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ax = x;
ay = y;
spd = 2;
image_speed = 0;
key = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
//Get Input
right = keyboard_check_pressed(ord("D"));
left = keyboard_check_pressed(ord("A"));
down = keyboard_check_pressed(ord("S"));
up = keyboard_check_pressed(ord("W"));
hsp = (right - left);
vsp = (down - up);
if ((x == ax) &amp;&amp; (hsp != 0) &amp;&amp; !place_meeting(ax + sign(hsp)*16, ay, par_solid)) ax += sign(hsp)*16;
else x += spd * sign(ax-x);
if ((y == ay) &amp;&amp; (vsp != 0) &amp;&amp; !place_meeting(ax, ay + sign(vsp)*16, par_solid)) ay += sign(vsp)*16;
else y += spd * sign(ay-y);
if left
{
    image_index += 1;
    sprite_index = s_player;
    image_xscale = -1;
}
if right
{
    image_index += 1;
    sprite_index = s_player;
    image_xscale = 1;
}
if up
{
    image_index += 1;
    sprite_index = s_player_up;
}
if down
{
    image_index += 1;
    sprite_index = s_player_down;
}
if place_meeting(x,y,o_key)
{
    key = true;
    instance_destroy(o_key);
}
if distance_to_object(o_door) &lt; 1 and key = true
{
    instance_destroy(o_door);
    key = false;
    room += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
